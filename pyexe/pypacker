#!/usr/bin/env python3
# coding=utf-8

'''
将一个 Python 程序所 import 的所有用户自己的模块找出来一起打包

更新于2011年2月3日
'''

import sys, os
from subprocess import Popen, PIPE, STDOUT
from python import mymodsImported

def getModuleFiles(file):
  return [m.__file__ for m in mymodsImported(file)]

if __name__ == '__main__':
  fin = dry_run = False
  if len(sys.argv) == 2:
    fin = sys.argv[1]
  elif len(sys.argv) == 3 and sys.argv[1] in ('-l', '--list', '--dry-run'):
    dry_run = True
    fin = sys.argv[2]
  else:
    print('用法：', os.path.basename(sys.argv[0]), '[选项] 要打包的 Python 程序文件')
    print("\t选项 '-l', '--list' 或 '--dry-run' 指定不执行打包，只列出要打包的文件")
    sys.exit(2)

  if fin:
    files = getModuleFiles(fin)
    if dry_run:
      print('\n'.join(files))
    else:
      archieve = os.path.basename(fin)
      if archieve.find('.') != -1:
        archieve = archieve[:archieve.find('.')]
      cmd = ['zip', '-uj', archieve, '-@']
      try:
        p = Popen(cmd, stdin=PIPE, stderr=PIPE)
        err = p.communicate('\n'.join(files).encode())
        errresult = err[1].decode()
        if errresult.find('not found or empty') == -1:
          print(errresult)
        if p.returncode == 12:
          # 12: nothing to do
          print('原文件不需要改变。')
        elif p.returncode:
          print('zip 程序返回了', p.returncode)
      except OSError:
        sys.stderr.write('未能成功运行 zip 程序！\n')
        sys.exit(1)
      print('完成！')

# vim:tw=78:expandtab:sts=2:fdm=expr:fde=getline(v\:lnum)=~'\\v^\\S.*\:(\\s*#.*)?$'?'>1'\:1
