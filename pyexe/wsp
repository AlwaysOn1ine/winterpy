#!/usr/bin/env python3
# vim:fileencoding=utf-8

'''
Web Service Provider

为网页脚本提供支持
'''

import os
from subprocess import getoutput
from functools import lru_cache
import json

import tornado.web
import tornado.httpserver
from tornado.options import define, options

@lru_cache()
def lookupip(ip):
  return getoutput('cip ' + ip).replace('CZ88.NET', '').strip() or '-'

actionfile = '~/.privoxy/mine.action'

class IPHandler(tornado.web.RequestHandler):
  def get(self):
    q = self.get_argument('q').split(',')
    addr = []
    for ip in q:
      a = lookupip(ip)
      if 'illegal' in a:
        a = '(错误)'
      elif '\n' in a:
        a = ''
      addr.append(a)

    ans = {
      'ans': addr,
    }
    cb = self.get_argument('cb', None)
    if cb:
      self.set_header('Content-Type', 'text/plain; charset=utf-8')
      self.write('%s(%s)' % (cb, json.dumps(ans, ensure_ascii=False)))
    else:
      self.write(ans)

class PrivoxyMan(tornado.web.RequestHandler):
  def post(self):
    url = self.get_argument('url')
    proxy = self.get_argument('proxy')
    dest = self.get_argument('dest')
    cmd = '''sed -i -e '/^{%s}$/a\\\n%s' ''' % (proxy, url.replace('\\', r'\\'))
    cmd += actionfile
    st = os.system(cmd)
    if st == 0:
      self.redirect(dest, permanent=True)
    else:
      self.write('error: %d' % st)

def main():
  define("port", default=2000, help="run on the given port", type=int)

  tornado.options.parse_command_line()
  application = tornado.web.Application([
    (r'/queryip$', IPHandler),
    (r'/privoxy/add$', PrivoxyMan),
  ],
    debug=True,
  )
  application.listen(options.port)
  tornado.ioloop.IOLoop.instance().start()

if __name__ == "__main__":
  try:
    main()
  except KeyboardInterrupt:
    pass
