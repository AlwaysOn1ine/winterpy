#!/usr/bin/env python3
# vim:fileencoding=utf-8

'''
针对 dirsave 的数据进行配置文件迁移
'''

import os
from pickleddata import PData
from path import path
import subprocess

datafile = path('~/scripts/python/pydata/dirsave').expand()
srcdir   = path('~').expand()
dstdir   = path('~/tmpfs/test').expand()

def mergeFile(src, dst):
  if src.value.endswith('~'):
    #合并目录时可能遇到
    return

  if src.islink():
    target = src.readlink()
    try:
      dst.linksto(target)
      print('链接', src)
    except OSError:
      pass
    return

  if dst.exists():
    try:
      subprocess.check_call(["cmp", src.value, dst.value])
    except subprocess.CalledProcessError:
      subprocess.call(['vimdiff', src.value, dst.value])
  else:
    try:
      dst.parent().mkdir()
    except OSError:
      pass
    print('复制', src)
    src.copyto(dst)

def mergeDir(src, dst):
  for p in src.list(nameonly=True):
    srcp = src + p
    if srcp.isdir() and not srcp.islink():
      mergeDir(srcp, dst+p)
    else:
      mergeFile(srcp, dst+p)

def dircopy(startdir, data):
  for k, v in data.items():
    if v is False:
      continue
    p = os.path.join(startdir, k)
    srcp = srcdir + p
    dstp = dstdir + p
    if v is True:
      if srcp.isdir() and not srcp.islink():
        mergeDir(srcp, dstp)
      else:
        mergeFile(srcp, dstp)
      continue
    if isinstance(v, dict):
      dircopy(p, v)

if __name__ == '__main__':
  with PData(datafile.value, default={}) as d:
    dircopy('', d)
